using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProjectEuler
{
	/// <summary>
	/// Even Fibonacci numbers
	/// 
	/// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
	/// 
	///			1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	///	
	/// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
	/// </summary>
	class Problem002
	{
		const int SEQ_MAX_VALUE = 4000000;

		public int Solve()
		{
			DateTime startTime = DateTime.Now;

			// ===============================	Simple way
			int sum = 0,
				prevA = 0,
				prevB = 1,
				fibVal = 0;

			while( fibVal < SEQ_MAX_VALUE )
			{
				// add the previous values
				fibVal = prevA + prevB;

				// Check if it's even...
				if( ( fibVal & 1 ) == 0 )
				{
					sum += fibVal;
				}

				prevA = prevB;
				prevB = fibVal;
			}

			// ===============================	Using recursive fn
			int fibVal2 = 0,
				fibValIndx = 0,
				sum2 = 0;

			while( fibVal2 < SEQ_MAX_VALUE )
			{
				fibVal2 = fibo( fibValIndx++ );
				if( ( fibVal2 & 1 ) == 0 )
				{
					sum2 += fibVal2;
				}
			}

			// ===============================
			DateTime stopTime = DateTime.Now;
			Console.WriteLine( "---Solution 2 took {0} ms", ( stopTime - startTime ).Milliseconds );

			return sum;
		}

		int fibo( int n )
		{
			if( n < 2 )
				return 1;
			else
				return fibo( n - 2 ) + fibo( n - 1 );
		}
	}
}
